// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Android BpkPicker should render correctly 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={false}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgba(37, 32, 51, 0.8)",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    testID={undefined}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "justifyContent": "center",
        "padding": 16,
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "index": 0,
            "label": "foo",
            "selected": false,
            "value": "foo",
          },
          Object {
            "index": 1,
            "label": "bar",
            "selected": false,
            "value": "bar",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      getItemLayout={[Function]}
      horizontal={false}
      initialNumToRender={6}
      initialScrollIndex={0}
      invertStickyHeaders={undefined}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "backgroundColor": "rgb(255, 255, 255)",
            "borderRadius": 2,
            "elevation": 5,
          },
          Object {
            "maxHeight": 102,
          },
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={undefined}
          style={null}
        >
          <View
            accessibilityComponentType="button"
            accessibilityLabel="foo"
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackground",
                "type": "ThemeAttrAndroid",
              }
            }
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 16,
              }
            }
            testID={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "rgb(82, 76, 97)",
                    "fontFamily": "sans-serif",
                    "fontSize": 16,
                    "fontWeight": "400",
                  },
                  Object {},
                ]
              }
            >
              foo
            </Text>
          </View>
        </View>
        <View
          onLayout={undefined}
          style={null}
        >
          <View
            accessibilityComponentType="button"
            accessibilityLabel="bar"
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackground",
                "type": "ThemeAttrAndroid",
              }
            }
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 16,
              }
            }
            testID={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "rgb(82, 76, 97)",
                    "fontFamily": "sans-serif",
                    "fontSize": 16,
                    "fontWeight": "400",
                  },
                  Object {},
                ]
              }
            >
              bar
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</Modal>
`;

exports[`Android BpkPicker should render correctly with a selected value 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={false}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgba(37, 32, 51, 0.8)",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    testID={undefined}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "justifyContent": "center",
        "padding": 16,
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "index": 0,
            "label": "foo",
            "selected": true,
            "value": "foo",
          },
          Object {
            "index": 1,
            "label": "bar",
            "selected": false,
            "value": "bar",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      getItemLayout={[Function]}
      horizontal={false}
      initialNumToRender={6}
      initialScrollIndex={0}
      invertStickyHeaders={undefined}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "backgroundColor": "rgb(255, 255, 255)",
            "borderRadius": 2,
            "elevation": 5,
          },
          Object {
            "maxHeight": 102,
          },
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={undefined}
          style={null}
        >
          <View
            accessibilityComponentType="button"
            accessibilityLabel="foo"
            accessibilityTraits={
              Array [
                "button",
                "selected",
              ]
            }
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackground",
                "type": "ThemeAttrAndroid",
              }
            }
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 16,
              }
            }
            testID={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "rgb(82, 76, 97)",
                    "fontFamily": "sans-serif",
                    "fontSize": 16,
                    "fontWeight": "400",
                  },
                  Object {
                    "color": "rgb(0, 178, 214)",
                  },
                ]
              }
            >
              foo
            </Text>
          </View>
        </View>
        <View
          onLayout={undefined}
          style={null}
        >
          <View
            accessibilityComponentType="button"
            accessibilityLabel="bar"
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeBackgroundAndroid={
              Object {
                "attribute": "selectableItemBackground",
                "type": "ThemeAttrAndroid",
              }
            }
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 16,
              }
            }
            testID={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "rgb(82, 76, 97)",
                    "fontFamily": "sans-serif",
                    "fontSize": 16,
                    "fontWeight": "400",
                  },
                  Object {},
                ]
              }
            >
              bar
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</Modal>
`;
