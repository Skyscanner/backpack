// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`iOS BpkSelect should render correctly 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hitSlop={undefined}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
  testID={undefined}
>
  <View
    style={
      Object {
        "borderBottomWidth": 1,
        "borderColor": "rgb(230, 228, 235)",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 4,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(37, 32, 51)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkSelect should render correctly with a text label 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hitSlop={undefined}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
  testID={undefined}
>
  <View
    style={
      Object {
        "borderBottomWidth": 1,
        "borderColor": "rgb(230, 228, 235)",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 4,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
          },
          Object {},
        ]
      }
    >
      label
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(37, 32, 51)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkSelect should render correctly with an element label 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hitSlop={undefined}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
  testID={undefined}
>
  <View
    style={
      Object {
        "borderBottomWidth": 1,
        "borderColor": "rgb(230, 228, 235)",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 4,
      }
    }
  >
    <View />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(37, 32, 51)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkSelect should render correctly with custom styles 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hitSlop={undefined}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "marginTop": 10,
    }
  }
  testID={undefined}
>
  <View
    style={
      Object {
        "borderBottomWidth": 1,
        "borderColor": "rgb(230, 228, 235)",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 4,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
          },
          Object {},
        ]
      }
    >
      label
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(37, 32, 51)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkSelect should render correctly with the disabled prop 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits={
    Array [
      "button",
      "disabled",
    ]
  }
  accessible={true}
  hitSlop={undefined}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
  testID={undefined}
>
  <View
    style={
      Object {
        "borderBottomWidth": 1,
        "borderColor": "rgb(230, 228, 235)",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 4,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
          },
          Object {
            "color": "rgb(230, 228, 235)",
          },
        ]
      }
    >
      label
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(37, 32, 51)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;
