name: Build

on:
  workflow_call:

defaults:
  run:
    shell: bash -l {0}

env:
  CACHE_NAME: node-modules-cache
  BUILD_CACHE_NAME: build-cache
  BUILD_LOGS: log-artifacts-build

jobs:
  CheckVisualTests:
    runs-on: ubuntu-latest
    outputs:
      requires-visual: ${{ steps['visual_tests_check'].outputs['requires_visual_tests'] }}
    steps:
      - uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            examples:
              - examples/**
            components:
              - packages/**
              - '!packages/**/*-test.js'
              - '!packages/**/*-test.tsx'
              - '!packages/**/*.md'
              - '!packages/*.md'

      - name: Changed files output
        id: visual_tests_check
        run: echo "requires_visual_tests=${{ steps.changed-files.outputs.examples_any_changed == 'true' || steps.changed-files.outputs.components_any_changed == 'true'}}" >> "$GITHUB_OUTPUT"

      - name: Report percy/backpack to pass
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "state": "success",
            "description": "No files requiring visual tests detected. Automatically passing Percy.",
            "context": "percy/backpack",
            "target_url": "${{ github.event.workflow_run.html_url }}"
            }' \
          --fail

  Build:
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore Cache
        uses: actions/cache/restore@v4.0.2
        id: npm-cache
        with:
          path: |
            node_modules/
            packages/node_modules/
          key: ${{ env.CACHE_NAME }}-${{ hashFiles('package-lock.json', 'packages/package-lock.json') }}

      - name: Setup logs directory
        run: mkdir logs

      - name: Build Backpack
        run: npm run build

      - name: Confirm the build hasn't changed any files
        run: ./scripts/check-pristine-state package-lock.json

      - name: Run typecheck
        run: npm run typecheck

      - name: Run tests
        run: bash -c "set -o pipefail;npm run test |& tee 'logs/test.log'"

      - name: Tar and compress logs
        run: |
          tar -cf ${{env.BUILD_LOGS}}.tar.br --use-compress-program="brotli -q 7" ./logs

      - name: Upload test logs
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{env.BUILD_LOGS}}
          path: ${{env.BUILD_LOGS}}.tar.br

  Danger:
    runs-on: ubuntu-latest
    needs: Build
    permissions:
      statuses: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore Cache
        uses: actions/cache/restore@v4.0.2
        id: npm-cache
        with:
          path: |
            node_modules/
            packages/node_modules/
          key: ${{ env.CACHE_NAME }}-${{ hashFiles('package-lock.json', 'packages/package-lock.json') }}

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{env.BUILD_LOGS}}

      - name: Untar and decompress artifacts
        shell: bash
        run: |
          brotli -d ${{env.BUILD_LOGS}}.tar.br
          tar -xf ${{env.BUILD_LOGS}}.tar

      - name: Danger
        run: npm run danger
        if: github.ref != 'refs/heads/main' && github.repository == github.event.pull_request.head.repo.full_name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  PercyTests:
    if: (needs.CheckVisualTests.outputs.requires-visual == 'true')
    runs-on: ubuntu-latest
    needs: [Danger, CheckVisualTests]
    permissions:
      statuses: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore Cache
        uses: actions/cache/restore@v4.0.2
        id: npm-cache
        with:
          path: |
            node_modules/
            packages/node_modules/
          key: ${{ env.CACHE_NAME }}-${{ hashFiles('package-lock.json', 'packages/package-lock.json') }}

      - name: Restore Cache
        uses: actions/cache/restore@v4.0.2
        id: storybook-dist-cache
        with:
          path: dist-storybook/
          key: ${{ env.BUILD_CACHE_NAME }}-${{ hashFiles('packages/**', 'examples/**') }}

      - name: Percy Test
        run: npm run percy-test
        if: ( github.ref == 'refs/heads/main' || github.repository == github.event.pull_request.head.repo.full_name) && github.actor != 'dependabot[bot]'
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
